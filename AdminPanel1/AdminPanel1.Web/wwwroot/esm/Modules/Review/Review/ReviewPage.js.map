{
  "version": 3,
  "sources": ["../../../../../Modules/Review/Review/ReviewPage.tsx", "../../../../../Modules/ServerTypes/Review/ReviewColumns.ts", "../../../../../Modules/ServerTypes/Review/ReviewForm.ts", "../../../../../Modules/ServerTypes/Review/ReviewRow.ts", "../../../../../Modules/ServerTypes/Review/ReviewService.ts", "../../../../../Modules/Review/Review/ReviewGrid.tsx", "../../../../../Modules/Review/Review/ReviewDialog.tsx"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { ReviewGrid } from './ReviewGrid';\r\n\r\nexport default () => gridPageInit(ReviewGrid);", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ReviewRow } from \"./ReviewRow\";\n\nexport interface ReviewColumns {\n    Id: Column<ReviewRow>;\n    Name: Column<ReviewRow>;\n    Email: Column<ReviewRow>;\n    Subject: Column<ReviewRow>;\n    Description: Column<ReviewRow>;\n}\n\nexport class ReviewColumns extends ColumnsBase<ReviewRow> {\n    static readonly columnsKey = 'Review.Review';\n    static readonly Fields = fieldsProxy<ReviewColumns>();\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ReviewForm {\n    Name: StringEditor;\n    Email: StringEditor;\n    Subject: StringEditor;\n    Description: StringEditor;\n}\n\nexport class ReviewForm extends PrefixedContext {\n    static readonly formKey = 'Review.Review';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ReviewForm.init)  {\n            ReviewForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(ReviewForm, [\n                'Name', w0,\n                'Email', w0,\n                'Subject', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ReviewRow {\n    Id?: number;\n    Name?: string;\n    Email?: string;\n    Subject?: string;\n    Description?: string;\n}\n\nexport abstract class ReviewRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Review.Review';\n    static readonly deletePermission = 'Review';\n    static readonly insertPermission = 'Review';\n    static readonly readPermission = 'Review';\n    static readonly updatePermission = 'Review';\n\n    static readonly Fields = fieldsProxy<ReviewRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ReviewRow } from \"./ReviewRow\";\n\nexport namespace ReviewService {\n    export const baseUrl = 'Review/Review';\n\n    export declare function Create(request: SaveRequest<ReviewRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ReviewRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ReviewRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ReviewRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ReviewRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ReviewRow>>;\n\n    export const Methods = {\n        Create: \"Review/Review/Create\",\n        Update: \"Review/Review/Update\",\n        Delete: \"Review/Review/Delete\",\n        Retrieve: \"Review/Review/Retrieve\",\n        List: \"Review/Review/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ReviewService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ReviewColumns, ReviewRow, ReviewService } from '@/ServerTypes/Review';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { ReviewDialog } from './ReviewDialog';\r\n\r\n@Decorators.registerClass('AdminPanel1.Review.ReviewGrid')\nexport class ReviewGrid extends EntityGrid<ReviewRow> {\n    protected getColumnsKey() { return ReviewColumns.columnsKey; }\n    protected getDialogType() { return ReviewDialog; }\n    protected getRowDefinition() { return ReviewRow; }\n    protected getService() { return ReviewService.baseUrl; }\n}", "\uFEFFimport { ReviewForm, ReviewRow, ReviewService } from '@/ServerTypes/Review';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('AdminPanel1.Review.ReviewDialog')\nexport class ReviewDialog extends EntityDialog<ReviewRow, any> {\n    protected getFormKey() { return ReviewForm.formKey; }\n    protected getRowDefinition() { return ReviewRow; }\n    protected getService() { return ReviewService.baseUrl; }\n\n    protected form = new ReviewForm(this.idPrefix);\n}"],
  "mappings": "0FAAC,IAAAA,EAA6B,SCA7B,IAAAC,EAAyC,SAYnC,IAAMC,EAAN,MAAMA,UAAsB,aAAuB,CAG1D,EAH0DC,EAAAD,EAAA,iBAA7CA,EACO,WAAa,gBADpBA,EAEO,UAAS,eAA2B,EAFjD,IAAME,EAANF,ECZN,IAAAG,EAA4D,SAStD,IAAMC,EAAN,MAAMA,UAAmB,iBAAgB,CAI5C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAW,KAAO,CACnBA,EAAW,KAAO,GAElB,IAAIE,EAAK,kBAET,gBAAaF,EAAY,CACrB,OAAQE,EACR,QAASA,EACT,UAAWA,EACX,cAAeA,CACnB,CAAC,CACL,CACJ,CACJ,EApBgDC,EAAAH,EAAA,cAAnCA,EACO,QAAU,gBADvB,IAAMI,EAANJ,ECTN,IAAAK,EAA4B,SAUtB,IAAeC,EAAf,MAAeA,CAAU,CAUhC,EAVgCC,EAAAD,EAAA,aAAVA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,SAJjBA,EAKF,iBAAmB,SALjBA,EAMF,eAAiB,SANfA,EAOF,iBAAmB,SAPjBA,EASF,UAAS,eAAuB,EAT7C,IAAeE,EAAfF,ECVN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAeC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACzC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SADzC,IAAAC,EAAAC,EAAAC,EAGAF,EAAA,CAAC,aAAW,cAAc,iCAAiC,GACpD,IAAMG,EAAN,MAAMA,UAAqBD,EAAA,eAA6B,CAAxD,kCAKH,KAAU,KAAO,IAAIE,EAAW,KAAK,QAAQ,EAJnC,YAAa,CAAE,OAAOA,EAAW,OAAS,CAC1C,kBAAmB,CAAE,OAAOC,CAAW,CACvC,YAAa,CAAE,OAAOC,EAAc,OAAS,CAG3D,EANOL,EAAAM,EAAAL,GAAMC,EAANK,EAAAP,EAAA,iBADPD,EACaG,GAAkDM,EAAAN,EAAA,gBAAxDO,EAAAT,EAAA,EAAME,GAAN,IAAMQ,EAANR,EDJP,IAAAS,EAAAC,EAAAC,EAIAF,EAAA,CAAC,aAAW,cAAc,+BAA+B,GAClD,IAAMG,EAAN,MAAMA,UAAmBD,EAAA,aAAsB,CACxC,eAAgB,CAAE,OAAOE,EAAc,UAAY,CACnD,eAAgB,CAAE,OAAOC,CAAc,CACvC,kBAAmB,CAAE,OAAOC,CAAW,CACvC,YAAa,CAAE,OAAOC,EAAc,OAAS,CAC3D,EALON,EAAAO,EAAAN,GAAMC,EAANM,EAAAR,EAAA,eADPD,EACaG,GAAyCO,EAAAP,EAAA,cAA/CQ,EAAAV,EAAA,EAAME,GAAN,IAAMS,EAANT,ELFP,IAAOU,GAAQC,EAAA,OAAM,gBAAaC,CAAU,EAA7B",
  "names": ["import_corelib", "import_corelib", "_ReviewColumns", "__name", "ReviewColumns", "import_corelib", "_ReviewForm", "prefix", "w0", "__name", "ReviewForm", "import_corelib", "_ReviewRow", "__name", "ReviewRow", "import_corelib", "ReviewService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_ReviewDialog_decorators", "_init", "_a", "_ReviewDialog", "ReviewForm", "ReviewRow", "ReviewService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ReviewDialog", "_ReviewGrid_decorators", "_init", "_a", "_ReviewGrid", "ReviewColumns", "ReviewDialog", "ReviewRow", "ReviewService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ReviewGrid", "ReviewPage_default", "__name", "ReviewGrid"]
}
