{
  "version": 3,
  "sources": ["../../../../../Modules/Product/Product/ProductPage.tsx", "../../../../../Modules/ServerTypes/Product/ProductColumns.ts", "../../../../../Modules/ServerTypes/Product/ProductForm.ts", "../../../../../Modules/ServerTypes/Product/ProductRow.ts", "../../../../../Modules/ServerTypes/Product/ProductService.ts", "../../../../../Modules/Product/Product/ProductGrid.tsx", "../../../../../Modules/Product/Product/ProductDialog.tsx"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { ProductGrid } from './ProductGrid';\r\n\r\nexport default () => gridPageInit(ProductGrid);", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ProductRow } from \"./ProductRow\";\n\nexport interface ProductColumns {\n    Id: Column<ProductRow>;\n    Name: Column<ProductRow>;\n    Description: Column<ProductRow>;\n    Price: Column<ProductRow>;\n    CatName: Column<ProductRow>;\n    Photo: Column<ProductRow>;\n    Type: Column<ProductRow>;\n    SupplierName: Column<ProductRow>;\n    EntryDate: Column<ProductRow>;\n    ReviewUrl: Column<ProductRow>;\n    Quantity: Column<ProductRow>;\n}\n\nexport class ProductColumns extends ColumnsBase<ProductRow> {\n    static readonly columnsKey = 'Product.Product';\n    static readonly Fields = fieldsProxy<ProductColumns>();\n}", "\uFEFFimport { StringEditor, DecimalEditor, LookupEditor, ImageUploadEditor, DateEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ProductForm {\n    Name: StringEditor;\n    Description: StringEditor;\n    Price: DecimalEditor;\n    CatId: LookupEditor;\n    Photo: ImageUploadEditor;\n    Type: StringEditor;\n    SupplierName: StringEditor;\n    EntryDate: DateEditor;\n    ReviewUrl: StringEditor;\n    Quantity: IntegerEditor;\n}\n\nexport class ProductForm extends PrefixedContext {\n    static readonly formKey = 'Product.Product';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProductForm.init)  {\n            ProductForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DecimalEditor;\n            var w2 = LookupEditor;\n            var w3 = ImageUploadEditor;\n            var w4 = DateEditor;\n            var w5 = IntegerEditor;\n\n            initFormType(ProductForm, [\n                'Name', w0,\n                'Description', w0,\n                'Price', w1,\n                'CatId', w2,\n                'Photo', w3,\n                'Type', w0,\n                'SupplierName', w0,\n                'EntryDate', w4,\n                'ReviewUrl', w0,\n                'Quantity', w5\n            ]);\n        }\n    }\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductRow {\n    Id?: number;\n    Name?: string;\n    Description?: string;\n    Price?: number;\n    CatId?: number;\n    Photo?: string;\n    Type?: string;\n    SupplierName?: string;\n    EntryDate?: string;\n    ReviewUrl?: string;\n    Quantity?: number;\n    CatName?: string;\n}\n\nexport abstract class ProductRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Product.Product';\n    static readonly lookupKey = 'Product.Product';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<ProductRow>('Product.Product') }\n    static async getLookupAsync() { return getLookupAsync<ProductRow>('Product.Product') }\n\n    static readonly deletePermission = 'Product';\n    static readonly insertPermission = 'Product';\n    static readonly readPermission = 'Product';\n    static readonly updatePermission = 'Product';\n\n    static readonly Fields = fieldsProxy<ProductRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductRow } from \"./ProductRow\";\n\nexport namespace ProductService {\n    export const baseUrl = 'Product/Product';\n\n    export declare function Create(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ProductRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ProductRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ProductRow>>;\n\n    export const Methods = {\n        Create: \"Product/Product/Create\",\n        Update: \"Product/Product/Update\",\n        Delete: \"Product/Product/Delete\",\n        Retrieve: \"Product/Product/Retrieve\",\n        List: \"Product/Product/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ProductColumns, ProductRow, ProductService } from '@/ServerTypes/Product';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { ProductDialog } from './ProductDialog';\r\n\r\n@Decorators.registerClass('AdminPanel1.Product.ProductGrid')\nexport class ProductGrid extends EntityGrid<ProductRow> {\n    protected getColumnsKey() { return ProductColumns.columnsKey; }\n    protected getDialogType() { return ProductDialog; }\n    protected getRowDefinition() { return ProductRow; }\n    protected getService() { return ProductService.baseUrl; }\n}", "\uFEFFimport { ProductForm, ProductRow, ProductService } from '@/ServerTypes/Product';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('AdminPanel1.Product.ProductDialog')\nexport class ProductDialog extends EntityDialog<ProductRow, any> {\n    protected getFormKey() { return ProductForm.formKey; }\n    protected getRowDefinition() { return ProductRow; }\n    protected getService() { return ProductService.baseUrl; }\n\n    protected form = new ProductForm(this.idPrefix);\n}"],
  "mappings": "0FAAC,IAAAA,EAA6B,SCA7B,IAAAC,EAAyC,SAkBnC,IAAMC,EAAN,MAAMA,UAAuB,aAAwB,CAG5D,EAH4DC,EAAAD,EAAA,kBAA/CA,EACO,WAAa,kBADpBA,EAEO,UAAS,eAA4B,EAFlD,IAAME,EAANF,EClBN,IAAAG,EAAuI,SAejI,IAAMC,EAAN,MAAMA,UAAoB,iBAAgB,CAI7C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAY,KAAO,CACpBA,EAAY,KAAO,GAEnB,IAAIE,EAAK,eACLC,EAAK,gBACLC,EAAK,eACLC,EAAK,oBACLC,EAAK,aACLC,EAAK,mBAET,gBAAaP,EAAa,CACtB,OAAQE,EACR,cAAeA,EACf,QAASC,EACT,QAASC,EACT,QAASC,EACT,OAAQH,EACR,eAAgBA,EAChB,YAAaI,EACb,YAAaJ,EACb,WAAYK,CAChB,CAAC,CACL,CACJ,CACJ,EA/BiDC,EAAAR,EAAA,eAApCA,EACO,QAAU,kBADvB,IAAMS,EAANT,ECfN,IAAAU,EAAuD,SAiBjD,IAAeC,EAAf,MAAeA,CAAW,CAO7B,OAAO,WAAY,CAAE,SAAO,aAAsB,iBAAiB,CAAE,CACrE,aAAa,gBAAiB,CAAE,SAAO,kBAA2B,iBAAiB,CAAE,CAQzF,EAhBiCC,EAAAD,EAAA,cAAXA,EACF,WAAa,KADXA,EAEF,aAAe,OAFbA,EAGF,gBAAkB,kBAHhBA,EAIF,UAAY,kBAJVA,EAUF,iBAAmB,UAVjBA,EAWF,iBAAmB,UAXjBA,EAYF,eAAiB,UAZfA,EAaF,iBAAmB,UAbjBA,EAeF,UAAS,eAAwB,EAf9C,IAAeE,EAAfF,ECjBN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,kBAQVA,EAAA,QAAU,CACnB,OAAQ,yBACR,OAAQ,yBACR,OAAQ,yBACR,SAAU,2BACV,KAAM,sBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAgBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC1C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SADzC,IAAAC,EAAAC,EAAAC,EAGAF,EAAA,CAAC,aAAW,cAAc,mCAAmC,GACtD,IAAMG,EAAN,MAAMA,UAAsBD,EAAA,eAA8B,CAA1D,kCAKH,KAAU,KAAO,IAAIE,EAAY,KAAK,QAAQ,EAJpC,YAAa,CAAE,OAAOA,EAAY,OAAS,CAC3C,kBAAmB,CAAE,OAAOC,CAAY,CACxC,YAAa,CAAE,OAAOC,EAAe,OAAS,CAG5D,EANOL,EAAAM,EAAAL,GAAMC,EAANK,EAAAP,EAAA,kBADPD,EACaG,GAAoDM,EAAAN,EAAA,iBAA1DO,EAAAT,EAAA,EAAME,GAAN,IAAMQ,EAANR,EDJP,IAAAS,EAAAC,EAAAC,EAIAF,EAAA,CAAC,aAAW,cAAc,iCAAiC,GACpD,IAAMG,EAAN,MAAMA,UAAoBD,EAAA,aAAuB,CAC1C,eAAgB,CAAE,OAAOE,EAAe,UAAY,CACpD,eAAgB,CAAE,OAAOC,CAAe,CACxC,kBAAmB,CAAE,OAAOC,CAAY,CACxC,YAAa,CAAE,OAAOC,EAAe,OAAS,CAC5D,EALON,EAAAO,EAAAN,GAAMC,EAANM,EAAAR,EAAA,gBADPD,EACaG,GAA2CO,EAAAP,EAAA,eAAjDQ,EAAAV,EAAA,EAAME,GAAN,IAAMS,EAANT,ELFP,IAAOU,GAAQC,EAAA,OAAM,gBAAaC,CAAW,EAA9B",
  "names": ["import_corelib", "import_corelib", "_ProductColumns", "__name", "ProductColumns", "import_corelib", "_ProductForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "__name", "ProductForm", "import_corelib", "_ProductRow", "__name", "ProductRow", "import_corelib", "ProductService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_ProductDialog_decorators", "_init", "_a", "_ProductDialog", "ProductForm", "ProductRow", "ProductService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductDialog", "_ProductGrid_decorators", "_init", "_a", "_ProductGrid", "ProductColumns", "ProductDialog", "ProductRow", "ProductService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductGrid", "ProductPage_default", "__name", "ProductGrid"]
}
