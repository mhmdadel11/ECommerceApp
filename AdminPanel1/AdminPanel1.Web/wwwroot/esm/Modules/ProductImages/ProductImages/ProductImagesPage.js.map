{
  "version": 3,
  "sources": ["../../../../../Modules/ProductImages/ProductImages/ProductImagesPage.tsx", "../../../../../Modules/ServerTypes/ProductImages/ProductImagesColumns.ts", "../../../../../Modules/ServerTypes/ProductImages/ProductImagesForm.ts", "../../../../../Modules/ServerTypes/ProductImages/ProductImagesRow.ts", "../../../../../Modules/ServerTypes/ProductImages/ProductImagesService.ts", "../../../../../Modules/ProductImages/ProductImages/ProductImagesGrid.tsx", "../../../../../Modules/ProductImages/ProductImages/ProductImagesDialog.tsx"],
  "sourcesContent": ["\uFEFFimport { gridPageInit } from '@serenity-is/corelib';\r\nimport { ProductImagesGrid } from './ProductImagesGrid';\r\n\r\nexport default () => gridPageInit(ProductImagesGrid);", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { ProductImagesRow } from \"./ProductImagesRow\";\n\nexport interface ProductImagesColumns {\n    Id: Column<ProductImagesRow>;\n    ProductName: Column<ProductImagesRow>;\n    Image: Column<ProductImagesRow>;\n}\n\nexport class ProductImagesColumns extends ColumnsBase<ProductImagesRow> {\n    static readonly columnsKey = 'ProductImages.ProductImages';\n    static readonly Fields = fieldsProxy<ProductImagesColumns>();\n}", "\uFEFFimport { ServiceLookupEditor, ImageUploadEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface ProductImagesForm {\n    ProductId: ServiceLookupEditor;\n    Image: ImageUploadEditor;\n}\n\nexport class ProductImagesForm extends PrefixedContext {\n    static readonly formKey = 'ProductImages.ProductImages';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ProductImagesForm.init)  {\n            ProductImagesForm.init = true;\n\n            var w0 = ServiceLookupEditor;\n            var w1 = ImageUploadEditor;\n\n            initFormType(ProductImagesForm, [\n                'ProductId', w0,\n                'Image', w1\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface ProductImagesRow {\n    Id?: number;\n    ProductId?: number;\n    Image?: string;\n    ProductName?: string;\n}\n\nexport abstract class ProductImagesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Image';\n    static readonly localTextPrefix = 'ProductImages.ProductImages';\n    static readonly deletePermission = 'Images';\n    static readonly insertPermission = 'Images';\n    static readonly readPermission = 'Images';\n    static readonly updatePermission = 'Images';\n\n    static readonly Fields = fieldsProxy<ProductImagesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { ProductImagesRow } from \"./ProductImagesRow\";\n\nexport namespace ProductImagesService {\n    export const baseUrl = 'ProductImages/ProductImages';\n\n    export declare function Create(request: SaveRequest<ProductImagesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<ProductImagesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ProductImagesRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<ProductImagesRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ProductImagesRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<ProductImagesRow>>;\n\n    export const Methods = {\n        Create: \"ProductImages/ProductImages/Create\",\n        Update: \"ProductImages/ProductImages/Update\",\n        Delete: \"ProductImages/ProductImages/Delete\",\n        Retrieve: \"ProductImages/ProductImages/Retrieve\",\n        List: \"ProductImages/ProductImages/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ProductImagesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ProductImagesColumns, ProductImagesRow, ProductImagesService } from '@/ServerTypes/ProductImages';\r\nimport { Decorators, EntityGrid } from '@serenity-is/corelib';\r\nimport { ProductImagesDialog } from './ProductImagesDialog';\r\n\r\n@Decorators.registerClass('AdminPanel1.ProductImages.ProductImagesGrid')\nexport class ProductImagesGrid extends EntityGrid<ProductImagesRow> {\n    protected getColumnsKey() { return ProductImagesColumns.columnsKey; }\n    protected getDialogType() { return ProductImagesDialog; }\n    protected getRowDefinition() { return ProductImagesRow; }\n    protected getService() { return ProductImagesService.baseUrl; }\n}", "\uFEFFimport { ProductImagesForm, ProductImagesRow, ProductImagesService } from '@/ServerTypes/ProductImages';\r\nimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\n\r\n@Decorators.registerClass('AdminPanel1.ProductImages.ProductImagesDialog')\nexport class ProductImagesDialog extends EntityDialog<ProductImagesRow, any> {\n    protected getFormKey() { return ProductImagesForm.formKey; }\n    protected getRowDefinition() { return ProductImagesRow; }\n    protected getService() { return ProductImagesService.baseUrl; }\n\n    protected form = new ProductImagesForm(this.idPrefix);\n}"],
  "mappings": "0FAAC,IAAAA,EAA6B,SCA7B,IAAAC,EAAyC,SAUnC,IAAMC,EAAN,MAAMA,UAA6B,aAA8B,CAGxE,EAHwEC,EAAAD,EAAA,wBAA3DA,EACO,WAAa,8BADpBA,EAEO,UAAS,eAAkC,EAFxD,IAAME,EAANF,ECVN,IAAAG,EAAsF,SAOhF,IAAMC,EAAN,MAAMA,UAA0B,iBAAgB,CAInD,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAkB,KAAO,CAC1BA,EAAkB,KAAO,GAEzB,IAAIE,EAAK,sBACLC,EAAK,uBAET,gBAAaH,EAAmB,CAC5B,YAAaE,EACb,QAASC,CACb,CAAC,CACL,CACJ,CACJ,EAnBuDC,EAAAJ,EAAA,qBAA1CA,EACO,QAAU,8BADvB,IAAMK,EAANL,ECPN,IAAAM,EAA4B,SAStB,IAAeC,EAAf,MAAeA,CAAiB,CAUvC,EAVuCC,EAAAD,EAAA,oBAAjBA,EACF,WAAa,KADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,8BAHhBA,EAIF,iBAAmB,SAJjBA,EAKF,iBAAmB,SALjBA,EAMF,eAAiB,SANfA,EAOF,iBAAmB,SAPjBA,EASF,UAAS,eAA8B,EATpD,IAAeE,EAAfF,ECTN,IAAAG,EAAuK,SAGvJC,OACAA,EAAA,QAAU,8BAQVA,EAAA,QAAU,CACnB,OAAQ,qCACR,OAAQ,qCACR,OAAQ,qCACR,SAAU,uCACV,KAAM,kCACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAsBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAChD,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCFjB,IAAAK,EAAuC,SCAvC,IAAAC,EAAyC,SADzC,IAAAC,EAAAC,EAAAC,EAGAF,EAAA,CAAC,aAAW,cAAc,+CAA+C,GAClE,IAAMG,EAAN,MAAMA,UAA4BD,EAAA,eAAoC,CAAtE,kCAKH,KAAU,KAAO,IAAIE,EAAkB,KAAK,QAAQ,EAJ1C,YAAa,CAAE,OAAOA,EAAkB,OAAS,CACjD,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAGlE,EANOL,EAAAM,EAAAL,GAAMC,EAANK,EAAAP,EAAA,wBADPD,EACaG,GAAgEM,EAAAN,EAAA,uBAAtEO,EAAAT,EAAA,EAAME,GAAN,IAAMQ,EAANR,EDJP,IAAAS,EAAAC,EAAAC,EAIAF,EAAA,CAAC,aAAW,cAAc,6CAA6C,GAChE,IAAMG,EAAN,MAAMA,UAA0BD,EAAA,aAA6B,CACtD,eAAgB,CAAE,OAAOE,EAAqB,UAAY,CAC1D,eAAgB,CAAE,OAAOC,CAAqB,CAC9C,kBAAmB,CAAE,OAAOC,CAAkB,CAC9C,YAAa,CAAE,OAAOC,EAAqB,OAAS,CAClE,EALON,EAAAO,EAAAN,GAAMC,EAANM,EAAAR,EAAA,sBADPD,EACaG,GAAuDO,EAAAP,EAAA,qBAA7DQ,EAAAV,EAAA,EAAME,GAAN,IAAMS,EAANT,ELFP,IAAOU,GAAQC,EAAA,OAAM,gBAAaC,CAAiB,EAApC",
  "names": ["import_corelib", "import_corelib", "_ProductImagesColumns", "__name", "ProductImagesColumns", "import_corelib", "_ProductImagesForm", "prefix", "w0", "w1", "__name", "ProductImagesForm", "import_corelib", "_ProductImagesRow", "__name", "ProductImagesRow", "import_corelib", "ProductImagesService", "x", "r", "s", "o", "import_corelib", "import_corelib", "_ProductImagesDialog_decorators", "_init", "_a", "_ProductImagesDialog", "ProductImagesForm", "ProductImagesRow", "ProductImagesService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductImagesDialog", "_ProductImagesGrid_decorators", "_init", "_a", "_ProductImagesGrid", "ProductImagesColumns", "ProductImagesDialog", "ProductImagesRow", "ProductImagesService", "__decoratorStart", "__decorateElement", "__name", "__runInitializers", "ProductImagesGrid", "ProductImagesPage_default", "__name", "ProductImagesGrid"]
}
