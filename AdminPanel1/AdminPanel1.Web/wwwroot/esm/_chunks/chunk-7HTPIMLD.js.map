{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/SouqCom/CartColumns.ts", "../../../Modules/ServerTypes/SouqCom/CartRow.ts", "../../../Modules/ServerTypes/SouqCom/CartService.ts", "../../../Modules/ServerTypes/SouqCom/CategoryColumns.ts", "../../../Modules/ServerTypes/SouqCom/CategoryRow.ts", "../../../Modules/ServerTypes/SouqCom/CategoryService.ts", "../../../Modules/ServerTypes/SouqCom/CartForm.ts", "../../../Modules/ServerTypes/SouqCom/CategoryForm.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CartRow } from \"./CartRow\";\n\nexport interface CartColumns {\n    Id: Column<CartRow>;\n    UserId: Column<CartRow>;\n    ProductName: Column<CartRow>;\n    Qty: Column<CartRow>;\n}\n\nexport class CartColumns extends ColumnsBase<CartRow> {\n    static readonly columnsKey = 'SouqCom.Cart';\n    static readonly Fields = fieldsProxy<CartColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CartRow {\n    Id?: number;\n    UserId?: string;\n    ProductId?: number;\n    Qty?: number;\n    ProductName?: string;\n}\n\nexport abstract class CartRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'UserId';\n    static readonly localTextPrefix = 'SouqCom.Cart';\n    static readonly deletePermission = 'Cart';\n    static readonly insertPermission = 'Cart';\n    static readonly readPermission = 'Cart';\n    static readonly updatePermission = 'Cart';\n\n    static readonly Fields = fieldsProxy<CartRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CartRow } from \"./CartRow\";\n\nexport namespace CartService {\n    export const baseUrl = 'SouqCom/Cart';\n\n    export declare function Create(request: SaveRequest<CartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<CartRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CartRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<CartRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CartRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<CartRow>>;\n\n    export const Methods = {\n        Create: \"SouqCom/Cart/Create\",\n        Update: \"SouqCom/Cart/Update\",\n        Delete: \"SouqCom/Cart/Delete\",\n        Retrieve: \"SouqCom/Cart/Retrieve\",\n        List: \"SouqCom/Cart/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CartService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { CategoryRow } from \"./CategoryRow\";\n\nexport interface CategoryColumns {\n    Id: Column<CategoryRow>;\n    Name: Column<CategoryRow>;\n    Photo: Column<CategoryRow>;\n    Description: Column<CategoryRow>;\n}\n\nexport class CategoryColumns extends ColumnsBase<CategoryRow> {\n    static readonly columnsKey = 'SouqCom.Category';\n    static readonly Fields = fieldsProxy<CategoryColumns>();\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface CategoryRow {\n    Id?: number;\n    Name?: string;\n    Photo?: string;\n    Description?: string;\n}\n\nexport abstract class CategoryRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'SouqCom.Category';\n    static readonly lookupKey = 'SouqCom.Category';\n\n    /** @deprecated use getLookupAsync instead */\n    static getLookup() { return getLookup<CategoryRow>('SouqCom.Category') }\n    static async getLookupAsync() { return getLookupAsync<CategoryRow>('SouqCom.Category') }\n\n    static readonly deletePermission = 'Category';\n    static readonly insertPermission = 'Category';\n    static readonly readPermission = 'Category';\n    static readonly updatePermission = 'Category';\n\n    static readonly Fields = fieldsProxy<CategoryRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { CategoryRow } from \"./CategoryRow\";\n\nexport namespace CategoryService {\n    export const baseUrl = 'SouqCom/Category';\n\n    export declare function Create(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<CategoryRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<CategoryRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<CategoryRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<CategoryRow>>;\n\n    export const Methods = {\n        Create: \"SouqCom/Category/Create\",\n        Update: \"SouqCom/Category/Update\",\n        Delete: \"SouqCom/Category/Delete\",\n        Retrieve: \"SouqCom/Category/Retrieve\",\n        List: \"SouqCom/Category/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>CategoryService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, ServiceLookupEditor, IntegerEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CartForm {\n    UserId: StringEditor;\n    ProductId: ServiceLookupEditor;\n    Qty: IntegerEditor;\n}\n\nexport class CartForm extends PrefixedContext {\n    static readonly formKey = 'SouqCom.Cart';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CartForm.init)  {\n            CartForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = ServiceLookupEditor;\n            var w2 = IntegerEditor;\n\n            initFormType(CartForm, [\n                'UserId', w0,\n                'ProductId', w1,\n                'Qty', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface CategoryForm {\n    Name: StringEditor;\n    Photo: StringEditor;\n    Description: StringEditor;\n}\n\nexport class CategoryForm extends PrefixedContext {\n    static readonly formKey = 'SouqCom.Category';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!CategoryForm.init)  {\n            CategoryForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(CategoryForm, [\n                'Name', w0,\n                'Photo', w0,\n                'Description', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "_CartColumns", "__name", "CartColumns", "import_corelib", "_CartRow", "__name", "CartRow", "import_corelib", "CartService", "x", "r", "s", "o", "import_corelib", "_CategoryColumns", "__name", "CategoryColumns", "import_corelib", "_CategoryRow", "__name", "CategoryRow", "import_corelib", "CategoryService", "x", "r", "s", "o", "import_corelib", "_CartForm", "prefix", "w0", "w1", "w2", "__name", "CartForm", "import_corelib", "_CategoryForm", "prefix", "w0", "__name", "CategoryForm"]
}
